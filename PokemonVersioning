In order to achieve Dynamic Versioning and to automatically manage dependencies version we can use below two plugins. Once integrated to 
pom file these plugin will help us to achieve the versioning and dependencies version management.

1) Flatten plugin to have variables in artifacts versions.
2) Version range in depedencies to get a version between a range.


1) Flatten Plugin -

Flatten plugin is used when we are using some system level variables or maven properties variables in pom file instead of exact string or
value. We use this particular plugin to resolve all those variables used in pom file to actual values and then maven is pointed to newly 
created pom file. 

Run below command to created a proper pom file instead of original pom file:

mvn clean flatten:flatten deploy -Dversion.timestamp=$( TZ=":UTC" date +%Y%m%d%H%M%S )

This command will generate the artifacts with the latest timestamp and deploy the same artifact to artifactory. And from artifactory we can
download the artifacts and proceed with application deployment. 


2) Version Range -

This plugin is used when we want to automate the version changes to the dependency in pom file. Using this option the latest version released
will be automatically resolved in pom file and on triggering the resolve ranges goal the pom file generated will be having the correct latest
used version of the dependency.

Now if we combine both these two plugins in our pom file we have to run the complete command as below and first the flatten pom file will be
generated and then the dependency version is resolved to exact version in same flatten pom file.

Use below command to utilize both the plugins in same project.

mvn clean flatten:flatten versions:resolve-ranges deploy -Dversion.timestamp=$( TZ=":UTC" date +%Y%m%d%H%M%S )

If you want to restrict only one dependency you can run below command:

mvn clean flatten:flatten versions:resolve-ranges deploy -Dincludes=junit:junit -Dversion.timestamp=$( TZ=":UTC" date +%Y%m%d%H%M%S ) 

The above command will only resolve the ranges of junit dependency and in our pom files we can only resolves the version of pokemon 
dependency.
